"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.areRegistersDenselyPacked = exports.utxoSumResultDiff = exports.utxoSum = void 0;
const bigIntLiterals_1 = require("./bigIntLiterals");
const bigIntUtils_1 = require("./bigIntUtils");
const objectUtils_1 = require("./objectUtils");
const NANOERGS_TOKEN_ID = "nanoErgs";
function utxoSum(boxes, tokenId) {
    const balances = {};
    for (const box of boxes) {
        if ((0, objectUtils_1.isUndefined)(tokenId) || tokenId === NANOERGS_TOKEN_ID) {
            balances[NANOERGS_TOKEN_ID] = (balances[NANOERGS_TOKEN_ID] || bigIntLiterals_1._0n) + (0, bigIntUtils_1.ensureBigInt)(box.value);
        }
        if (tokenId !== NANOERGS_TOKEN_ID) {
            for (const token of box.assets) {
                if ((0, objectUtils_1.isDefined)(tokenId) && tokenId !== token.tokenId) {
                    continue;
                }
                balances[token.tokenId] = (balances[token.tokenId] || bigIntLiterals_1._0n) + (0, bigIntUtils_1.ensureBigInt)(token.amount);
            }
        }
    }
    if ((0, objectUtils_1.isDefined)(tokenId)) {
        return balances[tokenId] || bigIntLiterals_1._0n;
    }
    return {
        nanoErgs: balances[NANOERGS_TOKEN_ID],
        tokens: Object.keys(balances)
            .filter((x) => x !== NANOERGS_TOKEN_ID)
            .map((tokenId) => ({ tokenId, amount: balances[tokenId] }))
    };
}
exports.utxoSum = utxoSum;
function utxoSumResultDiff(amountsA, amountsB) {
    const tokens = [];
    const nanoErgs = amountsA.nanoErgs - amountsB.nanoErgs;
    for (const token of amountsA.tokens) {
        const balance = token.amount - (amountsB.tokens.find((t) => t.tokenId === token.tokenId)?.amount || bigIntLiterals_1._0n);
        if (balance !== bigIntLiterals_1._0n) {
            tokens.push({ tokenId: token.tokenId, amount: balance });
        }
    }
    return { nanoErgs, tokens };
}
exports.utxoSumResultDiff = utxoSumResultDiff;
const MIN_REGISTER_NUMBER = 4;
const MAX_REGISTER_NUMBER = 9;
function areRegistersDenselyPacked(registers) {
    let lastValueIndex = 0;
    for (let i = MIN_REGISTER_NUMBER; i <= MAX_REGISTER_NUMBER; i++) {
        if (registers[`R${i}`]) {
            if (i === MIN_REGISTER_NUMBER) {
                lastValueIndex = i;
                continue;
            }
            if (i - lastValueIndex > 1) {
                return false;
            }
            lastValueIndex = i;
        }
    }
    return true;
}
exports.areRegistersDenselyPacked = areRegistersDenselyPacked;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm94VXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbHMvYm94VXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EscURBQXVDO0FBQ3ZDLCtDQUE2QztBQUM3QywrQ0FBdUQ7QUFFdkQsTUFBTSxpQkFBaUIsR0FBRyxVQUFVLENBQUM7QUFJckMsU0FBZ0IsT0FBTyxDQUFDLEtBQXdCLEVBQUUsT0FBaUI7SUFDakUsTUFBTSxRQUFRLEdBQWtDLEVBQUUsQ0FBQztJQUVuRCxLQUFLLE1BQU0sR0FBRyxJQUFJLEtBQUssRUFBRTtRQUN2QixJQUFJLElBQUEseUJBQVcsRUFBQyxPQUFPLENBQUMsSUFBSSxPQUFPLEtBQUssaUJBQWlCLEVBQUU7WUFDekQsUUFBUSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsSUFBSSxvQkFBRyxDQUFDLEdBQUcsSUFBQSwwQkFBWSxFQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUM5RjtRQUVELElBQUksT0FBTyxLQUFLLGlCQUFpQixFQUFFO1lBQ2pDLEtBQUssTUFBTSxLQUFLLElBQUksR0FBRyxDQUFDLE1BQU0sRUFBRTtnQkFDOUIsSUFBSSxJQUFBLHVCQUFTLEVBQUMsT0FBTyxDQUFDLElBQUksT0FBTyxLQUFLLEtBQUssQ0FBQyxPQUFPLEVBQUU7b0JBQ25ELFNBQVM7aUJBQ1Y7Z0JBRUQsUUFBUSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksb0JBQUcsQ0FBQyxHQUFHLElBQUEsMEJBQVksRUFBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDekY7U0FDRjtLQUNGO0lBRUQsSUFBSSxJQUFBLHVCQUFTLEVBQUMsT0FBTyxDQUFDLEVBQUU7UUFDdEIsT0FBTyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksb0JBQUcsQ0FBQztLQUNqQztJQUVELE9BQU87UUFDTCxRQUFRLEVBQUUsUUFBUSxDQUFDLGlCQUFpQixDQUFDO1FBQ3JDLE1BQU0sRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQzthQUMxQixNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsS0FBSyxpQkFBaUIsQ0FBQzthQUN0QyxHQUFHLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLFFBQVEsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDOUQsQ0FBQztBQUNKLENBQUM7QUE3QkQsMEJBNkJDO0FBRUQsU0FBZ0IsaUJBQWlCLENBQUMsUUFBb0IsRUFBRSxRQUFvQjtJQUMxRSxNQUFNLE1BQU0sR0FBMEIsRUFBRSxDQUFDO0lBQ3pDLE1BQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDLFFBQVEsQ0FBQztJQUV2RCxLQUFLLE1BQU0sS0FBSyxJQUFJLFFBQVEsQ0FBQyxNQUFNLEVBQUU7UUFDbkMsTUFBTSxPQUFPLEdBQ1gsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxLQUFLLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxNQUFNLElBQUksb0JBQUcsQ0FBQyxDQUFDO1FBRTNGLElBQUksT0FBTyxLQUFLLG9CQUFHLEVBQUU7WUFDbkIsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDO1NBQzFEO0tBQ0Y7SUFFRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxDQUFDO0FBQzlCLENBQUM7QUFkRCw4Q0FjQztBQUVELE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxDQUFDO0FBQzlCLE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxDQUFDO0FBRTlCLFNBQWdCLHlCQUF5QixDQUFDLFNBQWdDO0lBQ3hFLElBQUksY0FBYyxHQUFHLENBQUMsQ0FBQztJQUN2QixLQUFLLElBQUksQ0FBQyxHQUFHLG1CQUFtQixFQUFFLENBQUMsSUFBSSxtQkFBbUIsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUMvRCxJQUFJLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBaUMsQ0FBQyxFQUFFO1lBQ3JELElBQUksQ0FBQyxLQUFLLG1CQUFtQixFQUFFO2dCQUM3QixjQUFjLEdBQUcsQ0FBQyxDQUFDO2dCQUNuQixTQUFTO2FBQ1Y7WUFFRCxJQUFJLENBQUMsR0FBRyxjQUFjLEdBQUcsQ0FBQyxFQUFFO2dCQUMxQixPQUFPLEtBQUssQ0FBQzthQUNkO1lBRUQsY0FBYyxHQUFHLENBQUMsQ0FBQztTQUNwQjtLQUNGO0lBRUQsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBbEJELDhEQWtCQyJ9