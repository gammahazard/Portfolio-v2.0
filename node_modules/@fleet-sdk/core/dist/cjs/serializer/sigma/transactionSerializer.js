"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.serializeTransaction = void 0;
const common_1 = require("@fleet-sdk/common");
const utils_1 = require("@noble/hashes/utils");
const vlq_1 = require("../vlq");
const boxSerializer_1 = require("./boxSerializer");
function serializeTransaction(transaction) {
    const tokenIds = getDistinctTokenIds(transaction.outputs);
    return (0, utils_1.concatBytes)((0, vlq_1.vlqEncode)(transaction.inputs.length), (0, utils_1.concatBytes)(...transaction.inputs.map((input) => serializeInput(input))), (0, vlq_1.vlqEncode)(transaction.dataInputs.length), (0, utils_1.concatBytes)(...transaction.dataInputs.map((dataInput) => (0, utils_1.hexToBytes)(dataInput.boxId))), (0, vlq_1.vlqEncode)(tokenIds.length), (0, utils_1.concatBytes)(...tokenIds.map((tokenId) => (0, utils_1.hexToBytes)(tokenId))), (0, vlq_1.vlqEncode)(transaction.outputs.length), (0, utils_1.concatBytes)(...transaction.outputs.map((output) => (0, boxSerializer_1.serializeBox)(output, tokenIds))));
}
exports.serializeTransaction = serializeTransaction;
function serializeInput(input) {
    return (0, utils_1.concatBytes)((0, utils_1.hexToBytes)(input.boxId), generateEmptyProofBytes(), serializeExtension(input.extension));
}
function generateEmptyProofBytes() {
    return Uint8Array.from([0]);
}
function serializeExtension(extension) {
    const keys = Object.keys(extension);
    if ((0, common_1.isEmpty)(keys)) {
        return Uint8Array.from([0]);
    }
    const bytes = [];
    for (const key of keys) {
        const val = extension[key];
        if ((0, common_1.isDefined)(val)) {
            bytes.push((0, vlq_1.vlqEncode)(Number(key)));
            bytes.push((0, utils_1.hexToBytes)(val));
        }
    }
    return (0, utils_1.concatBytes)((0, vlq_1.vlqEncode)(keys.length), (0, utils_1.concatBytes)(...bytes));
}
function getDistinctTokenIds(outputs) {
    const tokenIds = new Set();
    outputs.flatMap((output) => output.assets.map((asset) => tokenIds.add(asset.tokenId)));
    return Array.from(tokenIds);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNhY3Rpb25TZXJpYWxpemVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3NlcmlhbGl6ZXIvc2lnbWEvdHJhbnNhY3Rpb25TZXJpYWxpemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDhDQVEyQjtBQUMzQiwrQ0FBOEQ7QUFDOUQsZ0NBQW1DO0FBQ25DLG1EQUErQztBQVEvQyxTQUFnQixvQkFBb0IsQ0FBQyxXQUF1QztJQUMxRSxNQUFNLFFBQVEsR0FBRyxtQkFBbUIsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFMUQsT0FBTyxJQUFBLG1CQUFXLEVBQ2hCLElBQUEsZUFBUyxFQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQ3BDLElBQUEsbUJBQVcsRUFBQyxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUV4RSxJQUFBLGVBQVMsRUFBQyxXQUFXLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUN4QyxJQUFBLG1CQUFXLEVBQUMsR0FBRyxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsSUFBQSxrQkFBVSxFQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBRXRGLElBQUEsZUFBUyxFQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsRUFDMUIsSUFBQSxtQkFBVyxFQUFDLEdBQUcsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsSUFBQSxrQkFBVSxFQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFFOUQsSUFBQSxlQUFTLEVBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFDckMsSUFBQSxtQkFBVyxFQUFDLEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLElBQUEsNEJBQVksRUFBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUNwRixDQUFDO0FBQ0osQ0FBQztBQWhCRCxvREFnQkM7QUFFRCxTQUFTLGNBQWMsQ0FBQyxLQUFvQjtJQUMxQyxPQUFPLElBQUEsbUJBQVcsRUFDaEIsSUFBQSxrQkFBVSxFQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFDdkIsdUJBQXVCLEVBQUUsRUFDekIsa0JBQWtCLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUNwQyxDQUFDO0FBQ0osQ0FBQztBQUVELFNBQVMsdUJBQXVCO0lBQzlCLE9BQU8sVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDOUIsQ0FBQztBQUVELFNBQVMsa0JBQWtCLENBQUMsU0FBMkI7SUFDckQsTUFBTSxJQUFJLEdBQUcsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNwQyxJQUFJLElBQUEsZ0JBQU8sRUFBQyxJQUFJLENBQUMsRUFBRTtRQUNqQixPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQzdCO0lBRUQsTUFBTSxLQUFLLEdBQWlCLEVBQUUsQ0FBQztJQUMvQixLQUFLLE1BQU0sR0FBRyxJQUFJLElBQUksRUFBRTtRQUN0QixNQUFNLEdBQUcsR0FBRyxTQUFTLENBQUMsR0FBd0MsQ0FBQyxDQUFDO1FBQ2hFLElBQUksSUFBQSxrQkFBUyxFQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ2xCLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBQSxlQUFTLEVBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNuQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUEsa0JBQVUsRUFBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQzdCO0tBQ0Y7SUFFRCxPQUFPLElBQUEsbUJBQVcsRUFBQyxJQUFBLGVBQVMsRUFBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBQSxtQkFBVyxFQUFDLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBQztBQUNwRSxDQUFDO0FBRUQsU0FBUyxtQkFBbUIsQ0FBQyxPQUF3QztJQUNuRSxNQUFNLFFBQVEsR0FBRyxJQUFJLEdBQUcsRUFBVSxDQUFDO0lBQ25DLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFFdkYsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQzlCLENBQUMifQ==