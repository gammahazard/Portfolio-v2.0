"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErgoUnsignedTransaction = void 0;
const common_1 = require("@fleet-sdk/common");
const utils_1 = require("@noble/hashes/utils");
const transactionSerializer_1 = require("../serializer/sigma/transactionSerializer");
const utils_2 = require("../serializer/utils");
class ErgoUnsignedTransaction {
    _inputs;
    _dataInputs;
    _outputs;
    constructor(inputs, dataInputs, outputs) {
        this._inputs = Object.freeze(inputs);
        this._dataInputs = Object.freeze(dataInputs);
        this._outputs = Object.freeze(outputs);
    }
    get id() {
        return (0, utils_1.bytesToHex)((0, utils_2.blake2b256)(this.toBytes()));
    }
    get inputs() {
        return this._inputs;
    }
    get dataInputs() {
        return this._dataInputs;
    }
    get outputs() {
        return this._outputs;
    }
    get burning() {
        return (0, common_1.utxoSumResultDiff)((0, common_1.utxoSum)(this.inputs), (0, common_1.utxoSum)(this.outputs));
    }
    toPlainObject(outputType) {
        return {
            inputs: this.inputs.map((input) => input.toUnsignedInputObject(outputType || "default")),
            dataInputs: this.dataInputs.map((input) => input.toPlainObject(outputType || "default")),
            outputs: this.outputs.map((output) => _stringifyBoxAmounts(output))
        };
    }
    toEIP12Object() {
        return this.toPlainObject("EIP-12");
    }
    toBytes() {
        return (0, transactionSerializer_1.serializeTransaction)({
            inputs: this.inputs.map((input) => input.toUnsignedInputObject("default")),
            dataInputs: this.dataInputs.map((input) => input.toPlainObject("default")),
            outputs: this.outputs
        });
    }
}
exports.ErgoUnsignedTransaction = ErgoUnsignedTransaction;
function _stringifyBoxAmounts(output) {
    return {
        ...output,
        value: output.value.toString(),
        assets: output.assets.map((token) => ({
            tokenId: token.tokenId,
            amount: token.amount.toString()
        }))
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJnb1Vuc2lnbmVkVHJhbnNhY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbW9kZWxzL2VyZ29VbnNpZ25lZFRyYW5zYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDhDQVEyQjtBQUMzQiwrQ0FBaUQ7QUFDakQscUZBQWlGO0FBQ2pGLCtDQUFpRDtBQVVqRCxNQUFhLHVCQUF1QjtJQUNqQixPQUFPLENBQWtCO0lBQ3pCLFdBQVcsQ0FBa0I7SUFDN0IsUUFBUSxDQUFtQjtJQUU1QyxZQUFZLE1BQWUsRUFBRSxVQUFtQixFQUFFLE9BQWlCO1FBQ2pFLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNyQyxJQUFJLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDN0MsSUFBSSxDQUFDLFFBQVEsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFFRCxJQUFJLEVBQUU7UUFDSixPQUFPLElBQUEsa0JBQVUsRUFBQyxJQUFBLGtCQUFVLEVBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNoRCxDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFRCxJQUFJLFVBQVU7UUFDWixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7SUFDMUIsQ0FBQztJQUVELElBQUksT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBRUQsSUFBSSxPQUFPO1FBQ1QsT0FBTyxJQUFBLDBCQUFpQixFQUFDLElBQUEsZ0JBQU8sRUFBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBQSxnQkFBTyxFQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQ3hFLENBQUM7SUFJRCxhQUFhLENBQTRCLFVBQWM7UUFDckQsT0FBTztZQUNMLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLHFCQUFxQixDQUFDLFVBQVUsSUFBSSxTQUFTLENBQUMsQ0FBQztZQUN4RixVQUFVLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsVUFBVSxJQUFJLFNBQVMsQ0FBQyxDQUFDO1lBQ3hGLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsb0JBQW9CLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDOUMsQ0FBQztJQUMxQixDQUFDO0lBRUQsYUFBYTtRQUNYLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsT0FBTztRQUNMLE9BQU8sSUFBQSw0Q0FBb0IsRUFBQztZQUMxQixNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxxQkFBcUIsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUMxRSxVQUFVLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDMUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO1NBQ3RCLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQXBERCwwREFvREM7QUFFRCxTQUFTLG9CQUFvQixDQUFJLE1BQTRCO0lBQzNELE9BQU87UUFDTCxHQUFHLE1BQU07UUFDVCxLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUU7UUFDOUIsTUFBTSxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO1lBQ3BDLE9BQU8sRUFBRSxLQUFLLENBQUMsT0FBTztZQUN0QixNQUFNLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxRQUFRLEVBQUU7U0FDaEMsQ0FBQyxDQUFDO0tBQ0MsQ0FBQztBQUNULENBQUMifQ==